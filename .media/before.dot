digraph structs {
  node [shape=Mrecord];
  2 [label="<name> Ident |{<f0> NamePos | 367} |{<f1> Name | \"main\"} |{<f2> Obj | *ast.Object(nil)}  "];
  7 [label="<name> BasicLit |{<f0> ValuePos | 382} |{<f1> Kind | 9} |{<f2> Value | \"\\\"fmt\\\"\"}  "];
  6 [label="<name> ImportSpec |{<f0> Doc | *ast.CommentGroup(nil)} |{<f1> Name | *ast.Ident(nil)} |<f2> Path|{<f3> Comment | *ast.CommentGroup(nil)} |{<f4> EndPos | 0}  "];
  6:f2 -> 7:name;
  8 [label="<name> *ast.ImportSpec"];
  8:name -> 6:name;
  4:<5index0> -> 8:name;
  4 [label="<name> GenDecl |{<f0> Doc | *ast.CommentGroup(nil)} |{<f1> TokPos | 375} |{<f2> Tok | 75} |{<f3> Lparen | 0} |{<f4> Specs | {<5index0> 0}} |{<f5> Rparen | 0}  "];
  9 [label="<name> *ast.GenDecl"];
  9:name -> 4:name;
  13 [label="<name> BasicLit |{<f0> ValuePos | 396} |{<f1> Kind | 9} |{<f2> Value | \"\\\"os\\\"\"}  "];
  12 [label="<name> ImportSpec |{<f0> Doc | *ast.CommentGroup(nil)} |{<f1> Name | *ast.Ident(nil)} |<f2> Path|{<f3> Comment | *ast.CommentGroup(nil)} |{<f4> EndPos | 0}  "];
  12:f2 -> 13:name;
  14 [label="<name> *ast.ImportSpec"];
  14:name -> 12:name;
  10:<11index0> -> 14:name;
  10 [label="<name> GenDecl |{<f0> Doc | *ast.CommentGroup(nil)} |{<f1> TokPos | 389} |{<f2> Tok | 75} |{<f3> Lparen | 0} |{<f4> Specs | {<11index0> 0}} |{<f5> Rparen | 0}  "];
  15 [label="<name> *ast.GenDecl"];
  15:name -> 10:name;
  19 [label="<name> BasicLit |{<f0> ValuePos | 409} |{<f1> Kind | 9} |{<f2> Value | \"\\\"os/signal\\\"\"}  "];
  18 [label="<name> ImportSpec |{<f0> Doc | *ast.CommentGroup(nil)} |{<f1> Name | *ast.Ident(nil)} |<f2> Path|{<f3> Comment | *ast.CommentGroup(nil)} |{<f4> EndPos | 0}  "];
  18:f2 -> 19:name;
  20 [label="<name> *ast.ImportSpec"];
  20:name -> 18:name;
  16:<17index0> -> 20:name;
  16 [label="<name> GenDecl |{<f0> Doc | *ast.CommentGroup(nil)} |{<f1> TokPos | 402} |{<f2> Tok | 75} |{<f3> Lparen | 0} |{<f4> Specs | {<17index0> 0}} |{<f5> Rparen | 0}  "];
  21 [label="<name> *ast.GenDecl"];
  21:name -> 16:name;
  25 [label="<name> BasicLit |{<f0> ValuePos | 429} |{<f1> Kind | 9} |{<f2> Value | \"\\\"syscall\\\"\"}  "];
  24 [label="<name> ImportSpec |{<f0> Doc | *ast.CommentGroup(nil)} |{<f1> Name | *ast.Ident(nil)} |<f2> Path|{<f3> Comment | *ast.CommentGroup(nil)} |{<f4> EndPos | 0}  "];
  24:f2 -> 25:name;
  26 [label="<name> *ast.ImportSpec"];
  26:name -> 24:name;
  22:<23index0> -> 26:name;
  22 [label="<name> GenDecl |{<f0> Doc | *ast.CommentGroup(nil)} |{<f1> TokPos | 422} |{<f2> Tok | 75} |{<f3> Lparen | 0} |{<f4> Specs | {<23index0> 0}} |{<f5> Rparen | 0}  "];
  27 [label="<name> *ast.GenDecl"];
  27:name -> 22:name;
  31 [label="<name> *ast.FuncDecl"];
  31:name -> 28:name;
  30 [label="<name> Object |{<f0> Kind | 5} |{<f1> Name | \"main\"} |<f2> Decl|{<f3> Data | interface \{\}(nil)} |{<f4> Type | interface \{\}(nil)}  "];
  30:f2 -> 31:name;
  29 [label="<name> Ident |{<f0> NamePos | 447} |{<f1> Name | \"main\"} |<f2> Obj "];
  29:f2 -> 30:name;
  33 [label="<name> FieldList |{<f0> Opening | 451} |{<f1> List | []*ast.Field\{\}} |{<f2> Closing | 452}  "];
  32 [label="<name> FuncType |{<f0> Func | 442} |<f1> Params|{<f2> Results | *ast.FieldList(nil)}  "];
  32:f1 -> 33:name;
  41 [label="<name> *ast.AssignStmt"];
  41:name -> 37:name;
  40 [label="<name> Object |{<f0> Kind | 4} |{<f1> Name | \"sigs\"} |<f2> Decl|{<f3> Data | interface \{\}(nil)} |{<f4> Type | interface \{\}(nil)}  "];
  40:f2 -> 41:name;
  39 [label="<name> Ident |{<f0> NamePos | 684} |{<f1> Name | \"sigs\"} |<f2> Obj "];
  39:f2 -> 40:name;
  42 [label="<name> *ast.Ident"];
  42:name -> 39:name;
  37:<38index0> -> 42:name;
  45 [label="<name> Ident |{<f0> NamePos | 692} |{<f1> Name | \"make\"} |{<f2> Obj | *ast.Object(nil)}  "];
  46 [label="<name> *ast.Ident"];
  46:name -> 45:name;
  50 [label="<name> Ident |{<f0> NamePos | 702} |{<f1> Name | \"os\"} |{<f2> Obj | *ast.Object(nil)}  "];
  51 [label="<name> *ast.Ident"];
  51:name -> 50:name;
  52 [label="<name> Ident |{<f0> NamePos | 705} |{<f1> Name | \"Signal\"} |{<f2> Obj | *ast.Object(nil)}  "];
  49 [label="<name> SelectorExpr |<f0> X|<f1> Sel "];
  49:f0 -> 51:name;
  49:f1 -> 52:name;
  53 [label="<name> *ast.SelectorExpr"];
  53:name -> 49:name;
  48 [label="<name> ChanType |{<f0> Begin | 697} |{<f1> Arrow | 0} |{<f2> Dir | 3} |<f3> Value "];
  48:f3 -> 53:name;
  54 [label="<name> *ast.ChanType"];
  54:name -> 48:name;
  55 [label="<name> BasicLit |{<f0> ValuePos | 713} |{<f1> Kind | 5} |{<f2> Value | \"1\"}  "];
  56 [label="<name> *ast.BasicLit"];
  56:name -> 55:name;
  44:<47index0> -> 54:name;
  44:<47index1> -> 56:name;
  44 [label="<name> CallExpr |<f0> Fun|{<f1> Lparen | 696} |{<f2> Args | {<47index0> 0|<47index1> 1}} |{<f3> Ellipsis | 0} |{<f4> Rparen | 714}  "];
  44:f0 -> 46:name;
  57 [label="<name> *ast.CallExpr"];
  57:name -> 44:name;
  37:<43index0> -> 57:name;
  37 [label="<name> AssignStmt |{<f0> Lhs | {<38index0> 0}} |{<f1> TokPos | 689} |{<f2> Tok | 47} |{<f3> Rhs | {<43index0> 0}}  "];
  58 [label="<name> *ast.AssignStmt"];
  58:name -> 37:name;
  63 [label="<name> *ast.AssignStmt"];
  63:name -> 59:name;
  62 [label="<name> Object |{<f0> Kind | 4} |{<f1> Name | \"done\"} |<f2> Decl|{<f3> Data | interface \{\}(nil)} |{<f4> Type | interface \{\}(nil)}  "];
  62:f2 -> 63:name;
  61 [label="<name> Ident |{<f0> NamePos | 721} |{<f1> Name | \"done\"} |<f2> Obj "];
  61:f2 -> 62:name;
  64 [label="<name> *ast.Ident"];
  64:name -> 61:name;
  59:<60index0> -> 64:name;
  67 [label="<name> Ident |{<f0> NamePos | 729} |{<f1> Name | \"make\"} |{<f2> Obj | *ast.Object(nil)}  "];
  68 [label="<name> *ast.Ident"];
  68:name -> 67:name;
  71 [label="<name> Ident |{<f0> NamePos | 739} |{<f1> Name | \"bool\"} |{<f2> Obj | *ast.Object(nil)}  "];
  72 [label="<name> *ast.Ident"];
  72:name -> 71:name;
  70 [label="<name> ChanType |{<f0> Begin | 734} |{<f1> Arrow | 0} |{<f2> Dir | 3} |<f3> Value "];
  70:f3 -> 72:name;
  73 [label="<name> *ast.ChanType"];
  73:name -> 70:name;
  74 [label="<name> BasicLit |{<f0> ValuePos | 745} |{<f1> Kind | 5} |{<f2> Value | \"1\"}  "];
  75 [label="<name> *ast.BasicLit"];
  75:name -> 74:name;
  66:<69index0> -> 73:name;
  66:<69index1> -> 75:name;
  66 [label="<name> CallExpr |<f0> Fun|{<f1> Lparen | 733} |{<f2> Args | {<69index0> 0|<69index1> 1}} |{<f3> Ellipsis | 0} |{<f4> Rparen | 746}  "];
  66:f0 -> 68:name;
  76 [label="<name> *ast.CallExpr"];
  76:name -> 66:name;
  59:<65index0> -> 76:name;
  59 [label="<name> AssignStmt |{<f0> Lhs | {<60index0> 0}} |{<f1> TokPos | 726} |{<f2> Tok | 47} |{<f3> Rhs | {<65index0> 0}}  "];
  77 [label="<name> *ast.AssignStmt"];
  77:name -> 59:name;
  81 [label="<name> Ident |{<f0> NamePos | 866} |{<f1> Name | \"signal\"} |{<f2> Obj | *ast.Object(nil)}  "];
  82 [label="<name> *ast.Ident"];
  82:name -> 81:name;
  83 [label="<name> Ident |{<f0> NamePos | 873} |{<f1> Name | \"Notify\"} |{<f2> Obj | *ast.Object(nil)}  "];
  80 [label="<name> SelectorExpr |<f0> X|<f1> Sel "];
  80:f0 -> 82:name;
  80:f1 -> 83:name;
  84 [label="<name> *ast.SelectorExpr"];
  84:name -> 80:name;
  86 [label="<name> Ident |{<f0> NamePos | 880} |{<f1> Name | \"sigs\"} |<f2> Obj "];
  86:f2 -> 40:name;
  87 [label="<name> *ast.Ident"];
  87:name -> 86:name;
  89 [label="<name> Ident |{<f0> NamePos | 886} |{<f1> Name | \"syscall\"} |{<f2> Obj | *ast.Object(nil)}  "];
  90 [label="<name> *ast.Ident"];
  90:name -> 89:name;
  91 [label="<name> Ident |{<f0> NamePos | 894} |{<f1> Name | \"SIGINT\"} |{<f2> Obj | *ast.Object(nil)}  "];
  88 [label="<name> SelectorExpr |<f0> X|<f1> Sel "];
  88:f0 -> 90:name;
  88:f1 -> 91:name;
  92 [label="<name> *ast.SelectorExpr"];
  92:name -> 88:name;
  94 [label="<name> Ident |{<f0> NamePos | 902} |{<f1> Name | \"syscall\"} |{<f2> Obj | *ast.Object(nil)}  "];
  95 [label="<name> *ast.Ident"];
  95:name -> 94:name;
  96 [label="<name> Ident |{<f0> NamePos | 910} |{<f1> Name | \"SIGTERM\"} |{<f2> Obj | *ast.Object(nil)}  "];
  93 [label="<name> SelectorExpr |<f0> X|<f1> Sel "];
  93:f0 -> 95:name;
  93:f1 -> 96:name;
  97 [label="<name> *ast.SelectorExpr"];
  97:name -> 93:name;
  85:<85index0> -> 87:name;
  85:<85index1> -> 92:name;
  85:<85index2> -> 97:name;
  85 [label="<name> []ast.Expr |<85index0> 0|<85index1> 1|<85index2> 2 "];
  79 [label="<name> CallExpr |<f0> Fun|{<f1> Lparen | 879} |<f2> Args|{<f3> Ellipsis | 0} |{<f4> Rparen | 917}  "];
  79:f0 -> 84:name;
  79:f2 -> 85:name;
  98 [label="<name> *ast.CallExpr"];
  98:name -> 79:name;
  78 [label="<name> ExprStmt |<f0> X "];
  78:f0 -> 98:name;
  99 [label="<name> *ast.ExprStmt"];
  99:name -> 78:name;
  104 [label="<name> FieldList |{<f0> Opening | 1097} |{<f1> List | []*ast.Field\{\}} |{<f2> Closing | 1098}  "];
  103 [label="<name> FuncType |{<f0> Func | 1093} |<f1> Params|{<f2> Results | *ast.FieldList(nil)}  "];
  103:f1 -> 104:name;
  112 [label="<name> *ast.AssignStmt"];
  112:name -> 108:name;
  111 [label="<name> Object |{<f0> Kind | 4} |{<f1> Name | \"sig\"} |<f2> Decl|{<f3> Data | interface \{\}(nil)} |{<f4> Type | interface \{\}(nil)}  "];
  111:f2 -> 112:name;
  110 [label="<name> Ident |{<f0> NamePos | 1111} |{<f1> Name | \"sig\"} |<f2> Obj "];
  110:f2 -> 111:name;
  113 [label="<name> *ast.Ident"];
  113:name -> 110:name;
  108:<109index0> -> 113:name;
  116 [label="<name> Ident |{<f0> NamePos | 1120} |{<f1> Name | \"sigs\"} |<f2> Obj "];
  116:f2 -> 40:name;
  117 [label="<name> *ast.Ident"];
  117:name -> 116:name;
  115 [label="<name> UnaryExpr |{<f0> OpPos | 1118} |{<f1> Op | 36} |<f2> X "];
  115:f2 -> 117:name;
  118 [label="<name> *ast.UnaryExpr"];
  118:name -> 115:name;
  108:<114index0> -> 118:name;
  108 [label="<name> AssignStmt |{<f0> Lhs | {<109index0> 0}} |{<f1> TokPos | 1115} |{<f2> Tok | 47} |{<f3> Rhs | {<114index0> 0}}  "];
  119 [label="<name> *ast.AssignStmt"];
  119:name -> 108:name;
  123 [label="<name> Ident |{<f0> NamePos | 1134} |{<f1> Name | \"fmt\"} |{<f2> Obj | *ast.Object(nil)}  "];
  124 [label="<name> *ast.Ident"];
  124:name -> 123:name;
  125 [label="<name> Ident |{<f0> NamePos | 1138} |{<f1> Name | \"Println\"} |{<f2> Obj | *ast.Object(nil)}  "];
  122 [label="<name> SelectorExpr |<f0> X|<f1> Sel "];
  122:f0 -> 124:name;
  122:f1 -> 125:name;
  126 [label="<name> *ast.SelectorExpr"];
  126:name -> 122:name;
  121 [label="<name> CallExpr |<f0> Fun|{<f1> Lparen | 1145} |{<f2> Args | []ast.Expr\{\}} |{<f3> Ellipsis | 0} |{<f4> Rparen | 1146}  "];
  121:f0 -> 126:name;
  128 [label="<name> *ast.CallExpr"];
  128:name -> 121:name;
  120 [label="<name> ExprStmt |<f0> X "];
  120:f0 -> 128:name;
  129 [label="<name> *ast.ExprStmt"];
  129:name -> 120:name;
  133 [label="<name> Ident |{<f0> NamePos | 1157} |{<f1> Name | \"fmt\"} |{<f2> Obj | *ast.Object(nil)}  "];
  134 [label="<name> *ast.Ident"];
  134:name -> 133:name;
  135 [label="<name> Ident |{<f0> NamePos | 1161} |{<f1> Name | \"Println\"} |{<f2> Obj | *ast.Object(nil)}  "];
  132 [label="<name> SelectorExpr |<f0> X|<f1> Sel "];
  132:f0 -> 134:name;
  132:f1 -> 135:name;
  136 [label="<name> *ast.SelectorExpr"];
  136:name -> 132:name;
  138 [label="<name> Ident |{<f0> NamePos | 1169} |{<f1> Name | \"sig\"} |<f2> Obj "];
  138:f2 -> 111:name;
  139 [label="<name> *ast.Ident"];
  139:name -> 138:name;
  131:<137index0> -> 139:name;
  131 [label="<name> CallExpr |<f0> Fun|{<f1> Lparen | 1168} |{<f2> Args | {<137index0> 0}} |{<f3> Ellipsis | 0} |{<f4> Rparen | 1172}  "];
  131:f0 -> 136:name;
  140 [label="<name> *ast.CallExpr"];
  140:name -> 131:name;
  130 [label="<name> ExprStmt |<f0> X "];
  130:f0 -> 140:name;
  141 [label="<name> *ast.ExprStmt"];
  141:name -> 130:name;
  143 [label="<name> Ident |{<f0> NamePos | 1183} |{<f1> Name | \"done\"} |<f2> Obj "];
  143:f2 -> 62:name;
  144 [label="<name> *ast.Ident"];
  144:name -> 143:name;
  145 [label="<name> Ident |{<f0> NamePos | 1191} |{<f1> Name | \"true\"} |{<f2> Obj | *ast.Object(nil)}  "];
  146 [label="<name> *ast.Ident"];
  146:name -> 145:name;
  142 [label="<name> SendStmt |<f0> Chan|{<f1> Arrow | 1188} |<f2> Value "];
  142:f0 -> 144:name;
  142:f2 -> 146:name;
  147 [label="<name> *ast.SendStmt"];
  147:name -> 142:name;
  107:<107index0> -> 119:name;
  107:<107index1> -> 129:name;
  107:<107index2> -> 141:name;
  107:<107index3> -> 147:name;
  107 [label="<name> []ast.Stmt |<107index0> 0|<107index1> 1|<107index2> 2|<107index3> 3 "];
  106 [label="<name> BlockStmt |{<f0> Lbrace | 1100} |<f1> List|{<f2> Rbrace | 1201}  "];
  106:f1 -> 107:name;
  102 [label="<name> FuncLit |<f0> Type|<f1> Body "];
  102:f0 -> 103:name;
  102:f1 -> 106:name;
  148 [label="<name> *ast.FuncLit"];
  148:name -> 102:name;
  101 [label="<name> CallExpr |<f0> Fun|{<f1> Lparen | 1202} |{<f2> Args | []ast.Expr\{\}} |{<f3> Ellipsis | 0} |{<f4> Rparen | 1203}  "];
  101:f0 -> 148:name;
  100 [label="<name> GoStmt |{<f0> Go | 1090} |<f1> Call "];
  100:f1 -> 101:name;
  150 [label="<name> *ast.GoStmt"];
  150:name -> 100:name;
  154 [label="<name> Ident |{<f0> NamePos | 1376} |{<f1> Name | \"fmt\"} |{<f2> Obj | *ast.Object(nil)}  "];
  155 [label="<name> *ast.Ident"];
  155:name -> 154:name;
  156 [label="<name> Ident |{<f0> NamePos | 1380} |{<f1> Name | \"Println\"} |{<f2> Obj | *ast.Object(nil)}  "];
  153 [label="<name> SelectorExpr |<f0> X|<f1> Sel "];
  153:f0 -> 155:name;
  153:f1 -> 156:name;
  157 [label="<name> *ast.SelectorExpr"];
  157:name -> 153:name;
  159 [label="<name> BasicLit |{<f0> ValuePos | 1388} |{<f1> Kind | 9} |{<f2> Value | \"\\\"awaiting signal\\\"\"}  "];
  160 [label="<name> *ast.BasicLit"];
  160:name -> 159:name;
  152:<158index0> -> 160:name;
  152 [label="<name> CallExpr |<f0> Fun|{<f1> Lparen | 1387} |{<f2> Args | {<158index0> 0}} |{<f3> Ellipsis | 0} |{<f4> Rparen | 1405}  "];
  152:f0 -> 157:name;
  161 [label="<name> *ast.CallExpr"];
  161:name -> 152:name;
  151 [label="<name> ExprStmt |<f0> X "];
  151:f0 -> 161:name;
  162 [label="<name> *ast.ExprStmt"];
  162:name -> 151:name;
  165 [label="<name> Ident |{<f0> NamePos | 1414} |{<f1> Name | \"done\"} |<f2> Obj "];
  165:f2 -> 62:name;
  166 [label="<name> *ast.Ident"];
  166:name -> 165:name;
  164 [label="<name> UnaryExpr |{<f0> OpPos | 1412} |{<f1> Op | 36} |<f2> X "];
  164:f2 -> 166:name;
  167 [label="<name> *ast.UnaryExpr"];
  167:name -> 164:name;
  163 [label="<name> ExprStmt |<f0> X "];
  163:f0 -> 167:name;
  168 [label="<name> *ast.ExprStmt"];
  168:name -> 163:name;
  172 [label="<name> Ident |{<f0> NamePos | 1424} |{<f1> Name | \"fmt\"} |{<f2> Obj | *ast.Object(nil)}  "];
  173 [label="<name> *ast.Ident"];
  173:name -> 172:name;
  174 [label="<name> Ident |{<f0> NamePos | 1428} |{<f1> Name | \"Println\"} |{<f2> Obj | *ast.Object(nil)}  "];
  171 [label="<name> SelectorExpr |<f0> X|<f1> Sel "];
  171:f0 -> 173:name;
  171:f1 -> 174:name;
  175 [label="<name> *ast.SelectorExpr"];
  175:name -> 171:name;
  177 [label="<name> BasicLit |{<f0> ValuePos | 1436} |{<f1> Kind | 9} |{<f2> Value | \"\\\"exiting\\\"\"}  "];
  178 [label="<name> *ast.BasicLit"];
  178:name -> 177:name;
  170:<176index0> -> 178:name;
  170 [label="<name> CallExpr |<f0> Fun|{<f1> Lparen | 1435} |{<f2> Args | {<176index0> 0}} |{<f3> Ellipsis | 0} |{<f4> Rparen | 1445}  "];
  170:f0 -> 175:name;
  179 [label="<name> *ast.CallExpr"];
  179:name -> 170:name;
  169 [label="<name> ExprStmt |<f0> X "];
  169:f0 -> 179:name;
  180 [label="<name> *ast.ExprStmt"];
  180:name -> 169:name;
  36:<36index0> -> 58:name;
  36:<36index1> -> 77:name;
  36:<36index2> -> 99:name;
  36:<36index3> -> 150:name;
  36:<36index4> -> 162:name;
  36:<36index5> -> 168:name;
  36:<36index6> -> 180:name;
  36 [label="<name> []ast.Stmt |<36index0> 0|<36index1> 1|<36index2> 2|<36index3> 3|<36index4> 4|<36index5> 5|<36index6> 6 "];
  35 [label="<name> BlockStmt |{<f0> Lbrace | 454} |<f1> List|{<f2> Rbrace | 1448}  "];
  35:f1 -> 36:name;
  28 [label="<name> FuncDecl |{<f0> Doc | *ast.CommentGroup(nil)} |{<f1> Recv | *ast.FieldList(nil)} |<f2> Name|<f3> Type|<f4> Body "];
  28:f2 -> 29:name;
  28:f3 -> 32:name;
  28:f4 -> 35:name;
  181 [label="<name> *ast.FuncDecl"];
  181:name -> 28:name;
  3:<3index0> -> 9:name;
  3:<3index1> -> 15:name;
  3:<3index2> -> 21:name;
  3:<3index3> -> 27:name;
  3:<3index4> -> 181:name;
  3 [label="<name> []ast.Decl |<3index0> 0|<3index1> 1|<3index2> 2|<3index3> 3|<3index4> 4 "];
  182:<183value0> -> 30:name;
  182 [label="<name> Scope |{<f0> Outer | *ast.Scope(nil)} |{<f1> Objects | {{<183key0> \"main\"| <183value0> *ast.Object}}}  "];
  184:<184index0> -> 6:name;
  184:<184index1> -> 12:name;
  184:<184index2> -> 18:name;
  184:<184index3> -> 24:name;
  184 [label="<name> []*ast.ImportSpec |<184index0> 0|<184index1> 1|<184index2> 2|<184index3> 3 "];
  185:<185index0> -> 45:name;
  185:<185index1> -> 50:name;
  185:<185index2> -> 67:name;
  185:<185index3> -> 71:name;
  185:<185index4> -> 81:name;
  185:<185index5> -> 89:name;
  185:<185index6> -> 94:name;
  185:<185index7> -> 123:name;
  185:<185index8> -> 133:name;
  185:<185index9> -> 145:name;
  185:<185index10> -> 154:name;
  185:<185index11> -> 172:name;
  185 [label="<name> []*ast.Ident |<185index0> 0|<185index1> 1|<185index2> 2|<185index3> 3|<185index4> 4|<185index5> 5|<185index6> 6|<185index7> 7|<185index8> 8|<185index9> 9|<185index10> 10|<185index11> 11 "];
  189 [label="<name> Comment |{<f0> Slash | 1} |{<f1> Text | \"// Sometimes we'd like our Go programs to intelligently\"}  "];
  190 [label="<name> Comment |{<f0> Slash | 58} |{<f1> Text | \"// handle [Unix signals](http://en.wikipedia.org/wiki/Unix_signal).\"}  "];
  191 [label="<name> Comment |{<f0> Slash | 127} |{<f1> Text | \"// For example, we might want a server to gracefully\"}  "];
  192 [label="<name> Comment |{<f0> Slash | 181} |{<f1> Text | \"// shutdown when it receives a `SIGTERM`, or a command-line\"}  "];
  193 [label="<name> Comment |{<f0> Slash | 242} |{<f1> Text | \"// tool to stop processing input if it receives a `SIGINT`.\"}  "];
  194 [label="<name> Comment |{<f0> Slash | 303} |{<f1> Text | \"// Here's how to handle signals in Go with channels.\"}  "];
  188:<188index0> -> 189:name;
  188:<188index1> -> 190:name;
  188:<188index2> -> 191:name;
  188:<188index3> -> 192:name;
  188:<188index4> -> 193:name;
  188:<188index5> -> 194:name;
  188 [label="<name> []*ast.Comment |<188index0> 0|<188index1> 1|<188index2> 2|<188index3> 3|<188index4> 4|<188index5> 5 "];
  187 [label="<name> CommentGroup |<f0> List "];
  187:f0 -> 188:name;
  197 [label="<name> Comment |{<f0> Slash | 463} |{<f1> Text | \"// Go signal notification works by sending `os.Signal`\"}  "];
  198 [label="<name> Comment |{<f0> Slash | 523} |{<f1> Text | \"// values on a channel. We'll create a channel to\"}  "];
  199 [label="<name> Comment |{<f0> Slash | 578} |{<f1> Text | \"// receive these notifications (we'll also make one to\"}  "];
  200 [label="<name> Comment |{<f0> Slash | 638} |{<f1> Text | \"// notify us when the program can exit).\"}  "];
  196:<196index0> -> 197:name;
  196:<196index1> -> 198:name;
  196:<196index2> -> 199:name;
  196:<196index3> -> 200:name;
  196 [label="<name> []*ast.Comment |<196index0> 0|<196index1> 1|<196index2> 2|<196index3> 3 "];
  195 [label="<name> CommentGroup |<f0> List "];
  195:f0 -> 196:name;
  203 [label="<name> Comment |{<f0> Slash | 755} |{<f1> Text | \"// `signal.Notify` registers the given channel to\"}  "];
  204 [label="<name> Comment |{<f0> Slash | 810} |{<f1> Text | \"// receive notifications of the specified signals.\"}  "];
  201:<202index0> -> 203:name;
  201:<202index1> -> 204:name;
  201 [label="<name> CommentGroup |{<f0> List | {<202index0> 0|<202index1> 1}}  "];
  207 [label="<name> Comment |{<f0> Slash | 926} |{<f1> Text | \"// This goroutine executes a blocking receive for\"}  "];
  208 [label="<name> Comment |{<f0> Slash | 981} |{<f1> Text | \"// signals. When it gets one it'll print it out\"}  "];
  209 [label="<name> Comment |{<f0> Slash | 1034} |{<f1> Text | \"// and then notify the program that it can finish.\"}  "];
  206:<206index0> -> 207:name;
  206:<206index1> -> 208:name;
  206:<206index2> -> 209:name;
  206 [label="<name> []*ast.Comment |<206index0> 0|<206index1> 1|<206index2> 2 "];
  205 [label="<name> CommentGroup |<f0> List "];
  205:f0 -> 206:name;
  212 [label="<name> Comment |{<f0> Slash | 1212} |{<f1> Text | \"// The program will wait here until it gets the\"}  "];
  213 [label="<name> Comment |{<f0> Slash | 1265} |{<f1> Text | \"// expected signal (as indicated by the goroutine\"}  "];
  214 [label="<name> Comment |{<f0> Slash | 1320} |{<f1> Text | \"// above sending a value on `done`) and then exit.\"}  "];
  211:<211index0> -> 212:name;
  211:<211index1> -> 213:name;
  211:<211index2> -> 214:name;
  211 [label="<name> []*ast.Comment |<211index0> 0|<211index1> 1|<211index2> 2 "];
  210 [label="<name> CommentGroup |<f0> List "];
  210:f0 -> 211:name;
  186:<186index0> -> 187:name;
  186:<186index1> -> 195:name;
  186:<186index2> -> 201:name;
  186:<186index3> -> 205:name;
  186:<186index4> -> 210:name;
  186 [label="<name> []*ast.CommentGroup |<186index0> 0|<186index1> 1|<186index2> 2|<186index3> 3|<186index4> 4 "];
  1 [label="<name> File |{<f0> Doc | *ast.CommentGroup(nil)} |{<f1> Package | 359} |<f2> Name|<f3> Decls|<f4> Scope|<f5> Imports|<f6> Unresolved|<f7> Comments "];
  1:f2 -> 2:name;
  1:f3 -> 3:name;
  1:f4 -> 182:name;
  1:f5 -> 184:name;
  1:f6 -> 185:name;
  1:f7 -> 186:name;
}
